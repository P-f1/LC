"use strict";function populateAttribute(t){switch(t){case"Double":case"Integer":case"Long":return 2;case"Boolean":return!0;case"Date":return 2;default:return"2"}}var __extends=this&&this.__extends||function(){var t=function(e,r){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])})(e,r)};return function(e,r){function n(){this.constructor=e}t(e,r),e.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),__decorate=this&&this.__decorate||function(t,e,r,n){var o,i=arguments.length,u=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)u=Reflect.decorate(t,e,r,n);else for(var a=t.length-1;a>=0;a--)(o=t[a])&&(u=(i<3?o(u):i>3?o(e,r,u):o(e,r))||u);return i>3&&u&&Object.defineProperty(e,r,u),u},__metadata=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},__param=this&&this.__param||function(t,e){return function(r,n){e(r,n,t)}};Object.defineProperty(exports,"__esModule",{value:!0});var Observable_1=require("rxjs/Observable"),core_1=require("@angular/core"),http_1=require("@angular/http"),wi_contrib_1=require("wi-studio/app/contrib/wi-contrib"),KubernetesDeployActivityHandler=function(t){function e(e,r){var n=t.call(this,e,r)||this;return n.http=r,n.value=function(t,e){if(console.log("[KubernetesDeploy::value] Build field : ",t),"Context"===t){console.log("\n\n[KubernetesDeploy::value] ================== ",t);for(var r=e.getField("Context").allowed,o=e.getField("Context").value,i=0,u=r;i<u.length;i++){var a=u[i];a.unique_id===o&&(n.selectedConnector=a.name)}return Observable_1.Observable.create(function(t){wi_contrib_1.WiContributionUtils.getConnections(n.http,"Kubernetes").subscribe(function(e){var r=[];e.forEach(function(t){for(var e=0,n=t.settings;e<n.length;e++){var o=n[e];"name"===o.name&&r.push({unique_id:wi_contrib_1.WiContributionUtils.getUniqueId(t),name:o.value})}}),t.next(r),t.complete()})})}if("Deployplan"===t){var l={Strategy:populateAttribute("String"),Pipeline:[{GroupID:populateAttribute("String"),Deployments:[{Type:populateAttribute("String"),Name:populateAttribute("String")}]}]};return console.log("[KubernetesDeployActivityHandler::value] deployplanObj : ",l),JSON.stringify(l)}if("Deployments"===t){var p=[{Command:populateAttribute("String"),Deployment:populateAttribute("String"),IsEndpoint:populateAttribute("Boolean"),Replicas:populateAttribute("Integer"),Containers:[{Name:populateAttribute("String"),Image:populateAttribute("String"),Ports:{ContainerPort:populateAttribute("Integer")},VolumeMounts:[{MountPath:populateAttribute("String"),Name:populateAttribute("String")}],Env:[{Name:populateAttribute("String"),Value:populateAttribute("String")}]}],Volumes:[{Name:populateAttribute("String"),HostPath:{Path:populateAttribute("String")}}]}];return console.log("[KubernetesDeployActivityHandler::value] deploymentsArr : ",p),JSON.stringify(p)}return null},n.validate=function(t,e){if(console.log("[GraphBuilder::value] Validate field : ",t),"Cluster"===t){if(null===e.getField("Cluster").value)return wi_contrib_1.ValidationResult.newValidationResult().setError("KubernetesDeploy-MSG-1000","Kubernetes deploy must be configured")}return null},n}return __extends(e,t),e=__decorate([wi_contrib_1.WiContrib({}),core_1.Injectable(),__param(0,core_1.Inject(core_1.Injector)),__metadata("design:paramtypes",[Object,http_1.Http])],e)}(wi_contrib_1.WiServiceHandlerContribution);exports.KubernetesDeployActivityHandler=KubernetesDeployActivityHandler;